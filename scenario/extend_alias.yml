input:
    input.go: |
        package alias

        // goverter:converter
        // goverter:extend Conv
        type Converter interface {
            Convert(source Input) Output
        }

        type InputAlias = Input
        type OutputAlias = Output

        type ID = string

        func Conv(i int) *string {
            return nil
        }

        type Input struct { Name int }
        type Output struct { Name *ID }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/jmattheis/goverter/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source execution.Input) execution.Output {
        	var aliasOutput execution.Output
        	aliasOutput.Name = execution.Conv(source.Name)
        	return aliasOutput
        }
