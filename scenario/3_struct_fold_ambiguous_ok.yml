input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            // goverter:fold
            // goverter:map AmbID AmbId
            // goverter:ignore Ambid2
            Convert(source Input) Output
        }

        type Input struct {
            OtherID string
            OtherId int
            Uuid string
            AmbID float64
            Ambid float64
            AmbID2 string
            Ambid2 string
        }
        type Output struct {
            OtherId int
            Uuid string
            UUID string
            AmbId float64
            AmbId2 string
        }
success: |
    // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

    package generated

    import execution "github.com/jmattheis/goverter/execution"

    type ConverterImpl struct{}

    func (c *ConverterImpl) Convert(source execution.Input) execution.Output {
    	var structsOutput execution.Output
    	structsOutput.OtherId = source.OtherId
    	structsOutput.Uuid = source.Uuid
    	structsOutput.UUID = source.Uuid
    	structsOutput.AmbId = source.AmbID
    	structsOutput.AmbId2 = source.AmbID2
    	return structsOutput
    }
