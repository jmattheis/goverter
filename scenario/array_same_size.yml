input:
    input.go: |
        package slices_arrays

        // goverter:converter
        type Converter interface {
            Convert(source [5]int) [5]int
        }

        // goverter:converter
        type Converter2 interface {
            Convert(source Data) Data
        }

        type Data struct {
            B [16]byte
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/jmattheis/goverter/execution"

        type Converter2Impl struct{}

        func (c *Converter2Impl) Convert(source execution.Data) execution.Data {
        	var slices_arraysData execution.Data
        	for i := 0; i < len(source.B); i++ {
        		slices_arraysData.B[i] = source.B[i]
        	}
        	return slices_arraysData
        }

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source [5]int) [5]int {
        	var intList [5]int
        	for i := 0; i < len(source); i++ {
        		intList[i] = source[i]
        	}
        	return intList
        }
