input:
    input.go: |
        package structs

        // goverter:converter
        type Converter interface {
            // goverter:mapExtend Age IntOne
            // goverter:mapExtend Score PlusScoreInt
            Convert(source Input) Output
        }

        type Input struct {
            Name string
            Age int
            Score int
        }
        type Output struct {
            Name string
            Age int
            Score int
        }
        func IntOne() int {
            return 1
        }
        func PlusScoreInt(source int) int {
            return source + 1
        }
success: |
    // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

    package generated

    import execution "github.com/jmattheis/goverter/execution"

    type ConverterImpl struct{}

    func (c *ConverterImpl) Convert(source execution.Input) execution.Output {
    	var structsOutput execution.Output
    	structsOutput.Name = source.Name
    	structsOutput.Age = execution.IntOne()
    	structsOutput.Score = execution.PlusScoreInt(source.Score)
    	return structsOutput
    }
