input:
    input.go: |
        package slices_arrays

        // goverter:converter
        type Converter interface {
            // goverter:useZeroValueOnPointerInconsistency
            ConvertHouse(source DBHouseNames) APIHouseNames
        }

        type DBHouseNames struct {
            Names []*string
        }

        type APIHouseNames struct {
            Names []string
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/jmattheis/goverter/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) ConvertHouse(source execution.DBHouseNames) execution.APIHouseNames {
        	var slices_arraysAPIHouseNames execution.APIHouseNames
        	if source.Names != nil {
        		slices_arraysAPIHouseNames.Names = make([]string, len(source.Names))
        		for i := 0; i < len(source.Names); i++ {
        			if source.Names[i] != nil {
        				slices_arraysAPIHouseNames.Names[i] = *source.Names[i]
        			}
        		}
        	}
        	return slices_arraysAPIHouseNames
        }
