input:
    input.go: |
        package execution

        // goverter:converter
        type Converter interface {
            // goverter:getters:enabled
            // goverter:getters:preferred
            // goverter:getters:template {{.}}
            Convert(source MyInput) MyOutput
        }

        type MyInput struct {
            name string
        }
        func (i MyInput) Name() string {
            return i.name
        }
        type MyOutput struct {
            Name string
        }
success:
    - generated/generated.go: |
        // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

        package generated

        import execution "github.com/jmattheis/goverter/execution"

        type ConverterImpl struct{}

        func (c *ConverterImpl) Convert(source execution.MyInput) execution.MyOutput {
        	var executionMyOutput execution.MyOutput
        	executionMyOutput.Name = source.Name()
        	return executionMyOutput
        }
