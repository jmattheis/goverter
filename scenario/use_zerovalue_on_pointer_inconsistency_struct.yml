input:
    input.go: |
        package structs

        // goverter:converter
        // goverter:useZeroValueOnPointerInconsistency
        type Converter interface {
            ConvertPerson(source Person) APIPerson
        }

        type Person struct {
            Info *PersonInfo
        }

        type PersonInfo struct {
            FirstName *string
        }

        type APIPerson struct {
            Info APIPersonInfo
        }

        type APIPersonInfo struct {
            FirstName string
        }
success: |
    // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

    package generated

    import execution "github.com/jmattheis/goverter/execution"

    type ConverterImpl struct{}

    func (c *ConverterImpl) ConvertPerson(source execution.Person) execution.APIPerson {
    	var structsAPIPerson execution.APIPerson
    	structsAPIPerson.Info = c.pStructsPersonInfoToStructsAPIPersonInfo(source.Info)
    	return structsAPIPerson
    }
    func (c *ConverterImpl) pStructsPersonInfoToStructsAPIPersonInfo(source *execution.PersonInfo) execution.APIPersonInfo {
    	var structsAPIPersonInfo execution.APIPersonInfo
    	if source != nil {
    		structsAPIPersonInfo = c.structsPersonInfoToStructsAPIPersonInfo((*source))
    	}
    	return structsAPIPersonInfo
    }
    func (c *ConverterImpl) structsPersonInfoToStructsAPIPersonInfo(source execution.PersonInfo) execution.APIPersonInfo {
    	var structsAPIPersonInfo execution.APIPersonInfo
    	var xstring string
    	if source.FirstName != nil {
    		xstring = *source.FirstName
    	}
    	structsAPIPersonInfo.FirstName = xstring
    	return structsAPIPersonInfo
    }
