input:
    input.go: |
        package slices_arrays

        // goverter:converter
        type Converter interface {
            // goverter:useZeroValueOnPointerInconsistency
            ConvertHouse(source DBHouseNames) APIHouseNames
        }

        type DBHouseNames struct {
            Names *[]string
        }

        type APIHouseNames struct {
            Names []string
        }
success: |
    // Code generated by github.com/jmattheis/goverter, DO NOT EDIT.

    package generated

    import execution "github.com/jmattheis/goverter/execution"

    type ConverterImpl struct{}

    func (c *ConverterImpl) ConvertHouse(source execution.DBHouseNames) execution.APIHouseNames {
    	var slices_arraysAPIHouseNames execution.APIHouseNames
    	var stringList []string
    	if source.Names != nil {
    		var stringList2 []string
    		if (*source.Names) != nil {
    			stringList2 = make([]string, len((*source.Names)))
    			for i := 0; i < len((*source.Names)); i++ {
    				stringList2[i] = (*source.Names)[i]
    			}
    		}
    		stringList = stringList2
    	}
    	slices_arraysAPIHouseNames.Names = stringList
    	return slices_arraysAPIHouseNames
    }
